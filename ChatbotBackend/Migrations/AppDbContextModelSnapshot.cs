// <auto-generated />
using ChatbotBackend.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatbotBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Goal", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TargetAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("requiredSip")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "Name");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Portfolio", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.HasKey("UserId", "AssetName");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Retirement", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FireAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InflationAdjustedFireAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("RetirementAge")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SipRequired")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Retirements");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("MonthlyExpense")
                        .HasColumnType("REAL");

                    b.Property<float>("MonthlySalary")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Goal", b =>
                {
                    b.HasOne("ChatbotBackend.Models.DbModel.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Portfolio", b =>
                {
                    b.HasOne("ChatbotBackend.Models.DbModel.User", "User")
                        .WithMany("Portfolios")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.Retirement", b =>
                {
                    b.HasOne("ChatbotBackend.Models.DbModel.User", "User")
                        .WithOne("Retirement")
                        .HasForeignKey("ChatbotBackend.Models.DbModel.Retirement", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatbotBackend.Models.DbModel.User", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Portfolios");

                    b.Navigation("Retirement")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
